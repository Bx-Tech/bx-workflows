name: SonarQube Analyze

on:
  workflow_call:
    inputs:
      coverage-command:
        required: true
        type: string
      coverage-path:
        required: false
        default: "./coverage/lcov.info"
        type: string
      node_version:
        required: false
        type: string
        default: "22"
      ignore-scripts:
        required: false
        type: boolean
        default: true
    secrets:
      NPM_GRANULAR_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history to get the full coverage report

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          registry-url: "https://registry.npmjs.org"
          scope: "@bxtech"
          cache: "yarn"

      - name: Install dependencies
        run: |
          if [ "${{ inputs.ignore-scripts }}" = 'true' ]; then
            export YARN_ENABLE_SCRIPTS=0
            yarn install --frozen-lockfile --immutable --ignore-scripts
          else
            export YARN_ENABLE_SCRIPTS=1
            yarn install --frozen-lockfile --immutable
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_GRANULAR_TOKEN }}

      - name: Run tests and generate coverage
        run: ${{ inputs.coverage-command }}
        env:
          NODE_OPTIONS: --max-old-space-size=6144

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          NODE_OPTIONS: --max-old-space-size=6144
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=${{ inputs.coverage-path }}
            -Dsonar.javascript.node.maxspace=6144
