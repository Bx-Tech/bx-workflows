on:
  workflow_call:
    inputs:
      appName:
        description: "name of the app. used in Prismic SSM secret /secrets/app/<app-name>/prismic"
        required: true
        type: string
      bucketName:
        description: "S3 bucket name to deploy the site to"
        required: true
        type: string
      distributionId:
        description: "Cloudfront distribution id to clear cache on"
        type: string
        required: false
      environment:
        description: "Environment target to build"
        default: "production"
        type: string
        required: false
    secrets:
      GH_READ_PACKAGES_TOKEN:
        required: true
      SECRETS_ACCESS_KEY_ID:
        required: true
      SECRETS_SECRET_ACCESS_KEY:
        required: true
      ARTIFACTS_ACCESS_KEY_ID:
        required: true
      ARTIFACTS_SECRET_KEY:
        required: true

permissions:
  contents: read
  actions: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Turnstyle
        uses: bx-looop/turnstyle@v1
        with:
          abort-after-seconds: 180
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          registry-url: "https://npm.pkg.github.com"
          scope: "@bx-looop"

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_READ_PACKAGES_TOKEN }}

      - name: Get Secret Tokens
        uses: bx-looop/ssm-secrets-action@v1.0.3
        with:
          aws-access-key-id: ${{ secrets.SECRETS_ACCESS_KEY_ID }}
          aws-secret-key: ${{ secrets.SECRETS_SECRET_ACCESS_KEY }}
          parameters: /secrets/apps/sentry-auth,/secrets/apps/${{ inputs.appName }}/prismic

      - name: Build
        run: npm run build:${{ inputs.environment }}
        env:
          CI: true
          SENTRY_AUTH_TOKEN: ${{ env.SENTRY_AUTH_TOKEN }}
          PRISMIC_TOKEN: ${{ env.PRISMIC_TOKEN }}

      - name: Export site
        run: npm run export
        env:
          PRISMIC_TOKEN: ${{ secrets.PRISMIC_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ARTIFACTS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ARTIFACTS_SECRET_KEY }}
          aws-region: eu-west-2

      - name: Deploy site
        run: aws s3 sync --acl public-read ./out s3://${{ inputs.bucketName }}

      - name: Clear Cloudfront cache
        if: ${{ inputs.distributionId }}
        run: aws cloudfront create-invalidation --distribution-id ${{ inputs.distributionId }} --paths "/*"
